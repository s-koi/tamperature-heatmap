{"version":3,"sources":["Graph.js","App.js","index.js"],"names":["SelectYear","handleChange","className","name","onChange","defaultValue","value","MonthAxis","scale","array","Array","i","length","map","y","transform","x","textAnchor","dominantBaseline","fontSize","DayAxis","contentHeight","Graph","useState","matrix","setMatrix","useEffect","fetch","then","data","json","margin","year","years","setYears","matdata","filter","item","textMonth","setTextMonth","textDay","setTextDay","textTemp","setTextTemp","xScale","d3","domain","day","range","yScale","month","color","event","target","viewBox","width","height","fill","averageTemp","onClick","handleChangeDay","handleChangeTemp","style","transition","Header","Footer","App","render","document","querySelector"],"mappings":"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","file":"static/js/main.0123ba5d.chunk.js","sourcesContent":["import * as d3 from 'd3';\r\nimport { autoType } from 'd3';\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nfunction SelectYear({handleChange}){ // 表示する年を選択\r\n    return (\r\n        <div className=\"container\">\r\n            <select name=\"year\" onChange={handleChange} defaultValue=\"2018\">\r\n                <option value=\"2018\">2018</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2020\">2020</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MonthAxis({scale}){ // 月を表す軸\r\n    const array = new Array(12);\r\n    for(let i=0; i<array.length; i++){\r\n        array[i]=i+1;\r\n    }\r\n    return (\r\n        <g>\r\n            {array.map((y, i) => {\r\n                return (\r\n                    <g key={i} transform={`translate(0, ${scale(y)})`}>\r\n                        <text x={-8}\r\n                            y={15}\r\n                            textAnchor=\"end\"\r\n                            dominantBaseline=\"central\"\r\n                            fontSize=\"20\"\r\n                        >\r\n                            {y}\r\n                        </text>\r\n                    </g>\r\n                )\r\n            })}\r\n            <text x=\"-23\"\r\n                y=\"41%\"\r\n                textAnchor=\"end\"\r\n                dominantBaseline=\"central\"\r\n                fontSize=\"20\"\r\n            >\r\n                月\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nfunction DayAxis({scale, contentHeight}){ // 日を表す軸\r\n    const y = contentHeight;\r\n    const array = new Array(31);\r\n    for(let i=0; i<array.length; i++){\r\n        array[i]=i+1;\r\n    }\r\n    return (\r\n        <g>\r\n            {array.map((x, i) => {\r\n                return (\r\n                    <g key={i} transform={`translate(${scale(x)} , 0)`}>\r\n                        <text x={15}\r\n                            y={y-65}\r\n                            textAnchor=\"middle\"\r\n                            dominantBaseline=\"central\"\r\n                            fontSize=\"20\"\r\n                        >\r\n                            {x}\r\n                        </text>\r\n                    </g>\r\n                )\r\n            })}\r\n            <text x=\"46%\"\r\n                y={y-45}\r\n                textAnchor=\"end\"\r\n                dominantBaseline=\"central\"\r\n                fontSize=\"20\"\r\n            >\r\n                日\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nfunction Graph(){\r\n\r\n    const [matrix, setMatrix] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"temp.json\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                setMatrix(data)\r\n            });\r\n    }, []);\r\n\r\n    // データの準備\r\n    const width = 1200; // グラフの幅\r\n    const height = 500; // グラフの高さ\r\n    const margin = {\r\n        top: 10,\r\n        bottom: 50,\r\n        left: 50,\r\n        right: 150,\r\n    }\r\n\r\n    // 選択した年を反映する\r\n    const [years, setYears] = useState({ year: \"2018\" })\r\n    function handleChangeYaer(event){\r\n        setYears(() => {\r\n            return {\r\n                year: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    const matdata = matrix.filter((item) => {\r\n        return item.year === years.year;\r\n    });\r\n\r\n    // クリックした際の月、日、平均気温を取得\r\n    const [textMonth, setTextMonth] = useState();\r\n    const [textDay, setTextDay] = useState();\r\n    const [textTemp, setTextTemp] = useState();\r\n    function handleChangeMonth(event){\r\n        setTextMonth(event);\r\n    }\r\n    function handleChangeDay(event){\r\n        setTextDay(event);\r\n    }\r\n    function handleChangeTemp(event){\r\n        setTextTemp(event);\r\n    }\r\n\r\n    // スケールの設定\r\n    const xScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(matdata, (item) => item.day)) // スケールの表示数を設定\r\n        .range([0, 280]); // domainの値がサイトの大きさと一致するように設定\r\n\r\n    const yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(matdata, (item) => item.month))\r\n        .range([0, 280]); \r\n\r\n    const color = d3\r\n        .scaleLinear()\r\n        .domain([0, 35])\r\n        // .domain(d3.extent(matdata, (item) => item.averageTemp))\r\n        .range([\"blue\", \"red\"]);\r\n    \r\n    return (\r\n        <div>\r\n            <SelectYear handleChange={handleChangeYaer}/>\r\n            <svg viewBox={`${-margin.left} ${-margin.top} ${width} ${height}`}>\r\n                <g>\r\n                    <MonthAxis scale={xScale} />\r\n                    <DayAxis scale={xScale} contentHeight={height}/>\r\n                    {matdata.map((item, i) => {\r\n                        return (\r\n                                <rect\r\n                                key={i}\r\n                                x={xScale(item.day)}\r\n                                y={yScale(item.month)}\r\n                                width=\"33\"\r\n                                height=\"33\"\r\n                                fill={color(item.averageTemp)}\r\n                                onClick={() => {\r\n                                    handleChangeMonth(item.month);\r\n                                    handleChangeDay(item.day);\r\n                                    handleChangeTemp(item.averageTemp);\r\n                                }}\r\n                                style={{transition: \"all 0.5s\"}}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    <text \r\n                        x=\"45%\"\r\n                        y={height-20}\r\n                        textAnchor=\"middle\"\r\n                        dominantBaseline=\"central\"\r\n                        fontSize=\"15\"\r\n                    >\r\n                        {textMonth}月{textDay}日の平均気温: {textTemp}℃\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Graph;","import Graph from \"./Graph\";\r\n\r\nfunction Header(){\r\n    return (\r\n        <header className=\"hero is-link is-medium\">\r\n            <div className=\"hero-body\">\r\n                <div className=\"container has-text-centered\">\r\n                    <p className=\"title\">\r\n                        横浜市の気温変化\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container has-text-centered\">\r\n                <p className=\"copyright\">&copy; Shuhei Koizumi</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nfunction App(){\r\n    return (\r\n        \r\n        <div>\r\n            <Header />\r\n            <div className=\"container has-text-centered\">\r\n                <Graph />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { render } from \"react-dom\";\r\nimport \"bulma/css/bulma.css\";\r\nimport App from \"./App\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));"],"sourceRoot":""}